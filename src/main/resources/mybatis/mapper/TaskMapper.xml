<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reed.info_manager.mapper.TaskMapper">
    <!--int insertTask(Task task);-->
    <insert id="insertTask" useGeneratedKeys="true" keyProperty="taskId">
        insert into task values(
        default,
        #{taskCreatorId},
        #{taskCreateTime},
        #{taskEndTime},
        #{taskContent},
        #{taskSubmittedNum},
        #{taskTargetNum},
        #{taskFilePath},
        #{taskTitle},
        default
        )
    </insert>

    <!--List<Task> getAllUnfinishedTaskByUserId(Integer id);-->
    <select id="getAllUnfinishedTaskByUserId" resultType="com.reed.info_manager.entity.Task">
        select * from task where task_creator_id = #{id} and task_finished = '0'
    </select>

    <!--List<Task> getAllFinishedTaskByUserId(Integer id);-->
    <select id="getAllFinishedTaskByUserId" resultType="com.reed.info_manager.entity.Task">
        select * from task where task_creator_id = #{id} and task_finished = '1'
    </select>

    <!--List<Task> getMyReceiveTaskListUnfinished(Integer id);-->
    <select id="getMyReceiveTaskListUnfinished" resultType="com.reed.info_manager.entity.Task">
        select * from task where task_id in (
            select task_id from task_target where task_target_group_id in(
              select user_group_id from user_role where user_id = #{id}
            )
        ) and task_id not in (select task_id from task_reply where task_responder_id = #{id})
    </select>

    <!--List<Task> getMyReceiveTaskListUnfinishedOrderByTime(Integer id);-->
    <select id="getMyReceiveTaskListUnfinishedOrderByTime" resultType="com.reed.info_manager.entity.Task">
        select * from task where task_id in (
            select task_id from task_target where task_target_group_id in(
              select user_group_id from user_role where user_id = #{id}
            )
        ) and task_id not in (select task_id from task_reply where task_responder_id = #{id})
        order by task.task_end_time asc limit 0,4
    </select>
    <!--List<Task> getMyReceiveTaskListFinished(Integer id);-->
    <select id="getMyReceiveTaskListFinished" resultType="com.reed.info_manager.entity.Task">
         select * from task where task_id in (select task_id from task_reply where task_responder_id = #{id})
    </select>

    <!--Task getTaskByTaskId(Integer taskId);-->
    <select id="getTaskByTaskId" resultType="com.reed.info_manager.entity.Task">
        select * from task where task_id = #{taskId}
    </select>
    <!--int addReplyNum(Integer taskId);-->
    <update id="addReplyNum">
        update task set task_submitted_num =task_submitted_num+1
    </update>

    <!--int deleteTaskByTaskId(Integer taskId);-->
    <delete id="deleteTaskByTaskId">
        delete from task where task_id = #{taskId}
    </delete>

    <!--int updateTaskByTaskId(Integer taskId);-->
    <!--#{taskCreatorId},-->
    <!--#{taskCreateTime},-->
    <!--#{taskEndTime},-->
    <!--#{taskContent},-->
    <!--#{taskSubmittedNum},-->
    <!--#{taskTargetNum},-->
    <!--#{taskFilePath},-->
    <!--#{taskTitle},-->
    <!--task_end_time = #{taskEndTime},-->
    <update id="updateTaskByTaskId" >
        update task
          set
              task_end_time = #{taskEndTime},
              task_content = #{taskContent},
              task_title = #{taskTitle},
              task_file_path = #{taskFilePath}
          where task_id = #{taskId}
    </update>

    <!--int finishTask(Integer taskId);-->
    <update id="finishTask">
        update task set task_finished = 1 where task_id = #{taskId}
    </update>
</mapper>
