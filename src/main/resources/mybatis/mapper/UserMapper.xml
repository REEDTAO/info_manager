<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reed.info_manager.mapper.UserMapper">

    <!--User selectUserByIdAndPassword(String id, String password);-->
    <select id="selectUserByIdAndPassword" resultType="com.reed.info_manager.entity.User">
        select * from user where id=#{id} and password=#{password}
    </select>

    <!--int addUsers(List<User> list);-->
    <insert id="addUsers" >
        insert into user(id,name,password,addr,email,tel,sex) values
        <foreach collection="list" item="user" separator=",">
            (
            default,
            #{user.name},
            #{user.password},
            #{user.addr},
            #{user.email},
            #{user.tel},
            #{user.sex}
            )
        </foreach>
    </insert>

    <!--String getUserNameByUserId(Integer taskCreatorId) ;-->
    <select id="getUserNameByUserId" resultType="string">
        select name from user where id = #{id}
    </select>

    <!--UserInfoDetail getUserDetailByUserId(Integer userId);-->
    <select id="getUserDetailByUserId" resultType="com.reed.info_manager.entity.UserInfoDetail">
        select * from user where user.id = #{userId}
    </select>

    <!--int updateUserByUserId(Integer id);-->
    <update id="updateUserByUserId">
        update user
          set
            name = #{name},
            password = #{password},
            addr = #{addr},
            email = #{email},
            tel = #{tel},
            sex = #{sex}
          where id  = #{id}
    </update>

    <!--List<User> getUserByParentId(Integer id);-->
    <select id="getUserByParentId" resultType="com.reed.info_manager.entity.User">
        select * from user u where u.id  in (select user_id from parent_user where parent_id=#{id})
    </select>
    <!--int findUserByIdAndName(@Param("id") Integer id,@Param("name") String name);-->
    <select id="findUserByIdAndName" resultType="int">
        select count(*) from user where id=#{id} and name = #{name}
    </select>

    <!--List<User> searchUserByName(String name);-->
    <select id="searchUserByName" resultType="com.reed.info_manager.entity.User">
        select * from user where name like CONCAT('%',#{name},'%')
    </select>
    <!--List<User> searchUserById(Integer id);-->
    <select id="searchUserById" resultType="com.reed.info_manager.entity.User">
        select * from user where id = #{id}
    </select>
    <!--int deleteUserByUserId(Integer userId);-->
    <delete id="deleteUserByUserId">
        delete from user where user.id = #{userId}
    </delete>
</mapper>
